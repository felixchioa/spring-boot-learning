<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap type="com.example.demo.vo.UserDataVO" id="UserResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="age" column="age"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <sql id="selectUserListSql">
        SELECT id, name, age, email, avatar
        FROM m_user
    </sql>

    <sql id="selectUserLikeNameSql">
        <bind name="pattern" value="'%' + user.name + '%'"/>
        SELECT id, name, age, email, avatar
        FROM m_user
        <where>
            <if test="user.name != null and user.name != ''">
                name LIKE #{pattern}
            </if>
        </where>
    </sql>

    <sql id="selectUserByIdSql">
        SELECT id, name, age, email, avatar
        FROM m_user
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </sql>

    <sql id="insertUserSql">
        INSERT INTO m_user (name, age, email, avatar)
        VALUES (#{user.name}, #{user.age}, #{user.email}, #{user.avatar})
    </sql>

    <sql id="updateUserSql">
        UPDATE m_user
        <set>
            <if test="user.name != null and user.name != ''">
                name = #{user.name},
            </if>
            <if test="user.age != null and user.age != 0">
                age = #{user.age},
            </if>
            <if test="user.email != null and user.email != ''">
                email = #{user.email},
            </if>
            <if test="user.avatar != null and user.avatar != ''">
                avatar = #{user.avatar},
            </if>
        </set>
        WHERE id = #{user.id}
    </sql>

    <select id="getUserList" resultMap="UserResult" resultType="com.example.demo.vo.UserDataVO">
        <include refid="selectUserListSql"/>
    </select>

    <select id="getUserListLikeName" resultMap="UserResult" resultType="com.example.demo.vo.UserDataVO">
        <include refid="selectUserLikeNameSql"/>
    </select>

    <select id="getUserById" resultMap="UserResult" resultType="com.example.demo.vo.UserDataVO">
        <include refid="selectUserByIdSql"/>
    </select>

    <insert id="insertUser" parameterType="com.example.demo.dto.UserDataDTO">
        <include refid="insertUserSql"/>
    </insert>

    <insert id="insertUsers" parameterType="list">
        INSERT INTO m_user (name, age, email, avatar)
        VALUES
        <foreach collection="list" item="user" separator="," open="" close="">
            (#{user.name}, #{user.age}, #{user.email}, #{user.avatar})
        </foreach>
    </insert>

    <update id="updateUser" parameterType="com.example.demo.dto.UserDataDTO">
        <include refid="updateUserSql"/>
    </update>

    <delete id="deleteUser">
        DELETE
        FROM m_user
        WHERE id = #{id}
    </delete>
</mapper>
